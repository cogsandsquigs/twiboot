#include "Particle.h"
#include "twiboot.h"

SYSTEM_MODE(MANUAL);
SYSTEM_THREAD(ENABLED);

unsigned char prog[924] = {
    // Offset 0x00000000 to 0x0000039B
    0x0C, 0x94, 0x5C, 0x00, 0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00,
    0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00,
    0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00,
    0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00,
    0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00,
    0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x13, 0x01, 0x0C, 0x94, 0x6E, 0x00,
    0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00,
    0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00,
    0x0C, 0x94, 0x6E, 0x00, 0x0C, 0x94, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x24, 0x00, 0x27, 0x00, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
    0x28, 0x00, 0x2B, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
    0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
    0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x01, 0x02, 0x04, 0x08,
    0x10, 0x20, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x02, 0x01, 0x00, 0x00, 0x03, 0x04, 0x07, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x11, 0x24, 0x1F, 0xBE, 0xCF, 0xEF, 0xD8, 0xE0,
    0xDE, 0xBF, 0xCD, 0xBF, 0x21, 0xE0, 0xA0, 0xE0, 0xB1, 0xE0, 0x01, 0xC0,
    0x1D, 0x92, 0xA9, 0x30, 0xB2, 0x07, 0xE1, 0xF7, 0x0E, 0x94, 0x5D, 0x01,
    0x0C, 0x94, 0xCC, 0x01, 0x0C, 0x94, 0x00, 0x00, 0xE1, 0xEB, 0xF0, 0xE0,
    0x24, 0x91, 0xED, 0xE9, 0xF0, 0xE0, 0x94, 0x91, 0xE9, 0xE8, 0xF0, 0xE0,
    0xE4, 0x91, 0xEE, 0x23, 0xC9, 0xF0, 0x22, 0x23, 0x39, 0xF0, 0x23, 0x30,
    0x01, 0xF1, 0xA8, 0xF4, 0x21, 0x30, 0x19, 0xF1, 0x22, 0x30, 0x29, 0xF1,
    0xF0, 0xE0, 0xEE, 0x0F, 0xFF, 0x1F, 0xEE, 0x58, 0xFF, 0x4F, 0xA5, 0x91,
    0xB4, 0x91, 0x2F, 0xB7, 0xF8, 0x94, 0xEC, 0x91, 0x81, 0x11, 0x26, 0xC0,
    0x90, 0x95, 0x9E, 0x23, 0x9C, 0x93, 0x2F, 0xBF, 0x08, 0x95, 0x27, 0x30,
    0xA9, 0xF0, 0x28, 0x30, 0xC9, 0xF0, 0x24, 0x30, 0x49, 0xF7, 0x20, 0x91,
    0x80, 0x00, 0x2F, 0x7D, 0x03, 0xC0, 0x20, 0x91, 0x80, 0x00, 0x2F, 0x77,
    0x20, 0x93, 0x80, 0x00, 0xDF, 0xCF, 0x24, 0xB5, 0x2F, 0x77, 0x24, 0xBD,
    0xDB, 0xCF, 0x24, 0xB5, 0x2F, 0x7D, 0xFB, 0xCF, 0x20, 0x91, 0xB0, 0x00,
    0x2F, 0x77, 0x20, 0x93, 0xB0, 0x00, 0xD2, 0xCF, 0x20, 0x91, 0xB0, 0x00,
    0x2F, 0x7D, 0xF9, 0xCF, 0x9E, 0x2B, 0xDA, 0xCF, 0x3F, 0xB7, 0xF8, 0x94,
    0x80, 0x91, 0x05, 0x01, 0x90, 0x91, 0x06, 0x01, 0xA0, 0x91, 0x07, 0x01,
    0xB0, 0x91, 0x08, 0x01, 0x26, 0xB5, 0xA8, 0x9B, 0x05, 0xC0, 0x2F, 0x3F,
    0x19, 0xF0, 0x01, 0x96, 0xA1, 0x1D, 0xB1, 0x1D, 0x3F, 0xBF, 0xBA, 0x2F,
    0xA9, 0x2F, 0x98, 0x2F, 0x88, 0x27, 0xBC, 0x01, 0xCD, 0x01, 0x62, 0x0F,
    0x71, 0x1D, 0x81, 0x1D, 0x91, 0x1D, 0x42, 0xE0, 0x66, 0x0F, 0x77, 0x1F,
    0x88, 0x1F, 0x99, 0x1F, 0x4A, 0x95, 0xD1, 0xF7, 0x08, 0x95, 0x8F, 0x92,
    0x9F, 0x92, 0xAF, 0x92, 0xBF, 0x92, 0xCF, 0x92, 0xDF, 0x92, 0xEF, 0x92,
    0xFF, 0x92, 0x0E, 0x94, 0xB8, 0x00, 0x4B, 0x01, 0x5C, 0x01, 0x88, 0xEE,
    0xC8, 0x2E, 0x83, 0xE0, 0xD8, 0x2E, 0xE1, 0x2C, 0xF1, 0x2C, 0x0E, 0x94,
    0xB8, 0x00, 0x68, 0x19, 0x79, 0x09, 0x8A, 0x09, 0x9B, 0x09, 0x68, 0x3E,
    0x73, 0x40, 0x81, 0x05, 0x91, 0x05, 0xA8, 0xF3, 0x21, 0xE0, 0xC2, 0x1A,
    0xD1, 0x08, 0xE1, 0x08, 0xF1, 0x08, 0x88, 0xEE, 0x88, 0x0E, 0x83, 0xE0,
    0x98, 0x1E, 0xA1, 0x1C, 0xB1, 0x1C, 0xC1, 0x14, 0xD1, 0x04, 0xE1, 0x04,
    0xF1, 0x04, 0x29, 0xF7, 0xFF, 0x90, 0xEF, 0x90, 0xDF, 0x90, 0xCF, 0x90,
    0xBF, 0x90, 0xAF, 0x90, 0x9F, 0x90, 0x8F, 0x90, 0x08, 0x95, 0x1F, 0x92,
    0x0F, 0x92, 0x0F, 0xB6, 0x0F, 0x92, 0x11, 0x24, 0x2F, 0x93, 0x3F, 0x93,
    0x8F, 0x93, 0x9F, 0x93, 0xAF, 0x93, 0xBF, 0x93, 0x80, 0x91, 0x01, 0x01,
    0x90, 0x91, 0x02, 0x01, 0xA0, 0x91, 0x03, 0x01, 0xB0, 0x91, 0x04, 0x01,
    0x30, 0x91, 0x00, 0x01, 0x23, 0xE0, 0x23, 0x0F, 0x2D, 0x37, 0x58, 0xF5,
    0x01, 0x96, 0xA1, 0x1D, 0xB1, 0x1D, 0x20, 0x93, 0x00, 0x01, 0x80, 0x93,
    0x01, 0x01, 0x90, 0x93, 0x02, 0x01, 0xA0, 0x93, 0x03, 0x01, 0xB0, 0x93,
    0x04, 0x01, 0x80, 0x91, 0x05, 0x01, 0x90, 0x91, 0x06, 0x01, 0xA0, 0x91,
    0x07, 0x01, 0xB0, 0x91, 0x08, 0x01, 0x01, 0x96, 0xA1, 0x1D, 0xB1, 0x1D,
    0x80, 0x93, 0x05, 0x01, 0x90, 0x93, 0x06, 0x01, 0xA0, 0x93, 0x07, 0x01,
    0xB0, 0x93, 0x08, 0x01, 0xBF, 0x91, 0xAF, 0x91, 0x9F, 0x91, 0x8F, 0x91,
    0x3F, 0x91, 0x2F, 0x91, 0x0F, 0x90, 0x0F, 0xBE, 0x0F, 0x90, 0x1F, 0x90,
    0x18, 0x95, 0x26, 0xE8, 0x23, 0x0F, 0x02, 0x96, 0xA1, 0x1D, 0xB1, 0x1D,
    0xD2, 0xCF, 0x78, 0x94, 0x84, 0xB5, 0x82, 0x60, 0x84, 0xBD, 0x84, 0xB5,
    0x81, 0x60, 0x84, 0xBD, 0x85, 0xB5, 0x82, 0x60, 0x85, 0xBD, 0x85, 0xB5,
    0x81, 0x60, 0x85, 0xBD, 0x80, 0x91, 0x6E, 0x00, 0x81, 0x60, 0x80, 0x93,
    0x6E, 0x00, 0x10, 0x92, 0x81, 0x00, 0x80, 0x91, 0x81, 0x00, 0x82, 0x60,
    0x80, 0x93, 0x81, 0x00, 0x80, 0x91, 0x81, 0x00, 0x81, 0x60, 0x80, 0x93,
    0x81, 0x00, 0x80, 0x91, 0x80, 0x00, 0x81, 0x60, 0x80, 0x93, 0x80, 0x00,
    0x80, 0x91, 0xB1, 0x00, 0x84, 0x60, 0x80, 0x93, 0xB1, 0x00, 0x80, 0x91,
    0xB0, 0x00, 0x81, 0x60, 0x80, 0x93, 0xB0, 0x00, 0x80, 0x91, 0x7A, 0x00,
    0x84, 0x60, 0x80, 0x93, 0x7A, 0x00, 0x80, 0x91, 0x7A, 0x00, 0x82, 0x60,
    0x80, 0x93, 0x7A, 0x00, 0x80, 0x91, 0x7A, 0x00, 0x81, 0x60, 0x80, 0x93,
    0x7A, 0x00, 0x80, 0x91, 0x7A, 0x00, 0x80, 0x68, 0x80, 0x93, 0x7A, 0x00,
    0x10, 0x92, 0xC1, 0x00, 0xED, 0xE9, 0xF0, 0xE0, 0x24, 0x91, 0xE9, 0xE8,
    0xF0, 0xE0, 0x84, 0x91, 0x88, 0x23, 0x99, 0xF0, 0x90, 0xE0, 0x88, 0x0F,
    0x99, 0x1F, 0xFC, 0x01, 0xE8, 0x59, 0xFF, 0x4F, 0xA5, 0x91, 0xB4, 0x91,
    0xFC, 0x01, 0xEE, 0x58, 0xFF, 0x4F, 0x85, 0x91, 0x94, 0x91, 0x8F, 0xB7,
    0xF8, 0x94, 0xEC, 0x91, 0xE2, 0x2B, 0xEC, 0x93, 0x8F, 0xBF, 0xC0, 0xE0,
    0xD0, 0xE0, 0x81, 0xE0, 0x0E, 0x94, 0x70, 0x00, 0x0E, 0x94, 0xDD, 0x00,
    0x80, 0xE0, 0x0E, 0x94, 0x70, 0x00, 0x0E, 0x94, 0xDD, 0x00, 0x20, 0x97,
    0xA1, 0xF3, 0x0E, 0x94, 0x00, 0x00, 0xF1, 0xCF, 0xF8, 0x94, 0xFF, 0xCF};

Twiboot twiboot; // Initiallize a twiboot object

void setup()
{
    Serial.begin(9600);
}

void loop()
{
    while (!twiboot.Init()) // wait for the bootloader to properly initialize
        ;

    Serial.println("Bootloader initialized!");

    char btldr_ver[16];
    twiboot.GetBootloaderVersion(btldr_ver);
    Serial.print("Bootloader version: ");
    Serial.println(btldr_ver);

    // Get chip information
    uint64_t signature;
    uint8_t pageSize;
    uint16_t flashSize;
    uint16_t eepromSize;

    twiboot.GetChipInfo(&signature, &pageSize, &flashSize, &eepromSize);

    Serial.print("Signature: ");
    Serial.println(signature, HEX);
    Serial.print("Page size: ");
    Serial.println(pageSize);
    Serial.print("Flash size: ");
    Serial.println(flashSize);
    Serial.print("EEPROM size: ");
    Serial.println(eepromSize);

    Serial.println("Flashing...");

    twiboot.WriteFlash(prog, sizeof(prog)); // flash the program

    Serial.println("Flashed!");

    Serial.println("Verifying...");
    if (twiboot.Verify(prog, sizeof(prog))) // verify the program
    {
        Serial.println("Verified!");
        Serial.println("All done, going to the app now!");

        twiboot.Exit();
    }
    else
    {
        Serial.println("Verification failed! Trying again...");
    }
}
